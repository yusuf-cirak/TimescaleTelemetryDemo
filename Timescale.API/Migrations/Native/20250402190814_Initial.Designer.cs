// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Timescale.API.Data;

#nullable disable

namespace Timescale.API.Migrations.Native
{
    [DbContext(typeof(NativePostgresDbContext))]
    [Migration("20250402190814_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Timescale.API.Models.VehicleTelemetry", b =>
                {
                    b.Property<string>("VehicleId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("BatteryVoltage")
                        .HasColumnType("double precision");

                    b.Property<int?>("EngineRpm")
                        .HasColumnType("integer");

                    b.Property<string>("EngineStatus")
                        .HasColumnType("text");

                    b.Property<double?>("EngineTemperature")
                        .HasColumnType("double precision");

                    b.Property<double?>("FuelLevel")
                        .HasColumnType("double precision");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<double>("OdometerReading")
                        .HasColumnType("double precision");

                    b.Property<double?>("Speed")
                        .HasColumnType("double precision");

                    b.HasKey("VehicleId", "Timestamp");

                    b.ToTable("VehicleTelemetries");
                });
#pragma warning restore 612, 618
        }
    }
}
